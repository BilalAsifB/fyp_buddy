version: '3.8'

services:
  redis:
    image: redis:7.0-alpine
    container_name: redis-app
    command: redis-server --requirepass ${REDIS_PASSWORD:-localdevpassword} --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    restart: unless-stopped
    networks:
      - fyp-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-localdevpassword}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-localdevpassword}

  fyp-backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: fyp-backend
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_DATABASE_NAME=${MONGODB_DATABASE_NAME:-fyp_data}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - LANGSMITH_TRACING=${LANGSMITH_TRACING:-true}
      - LANGSMITH_ENDPOINT=${LANGSMITH_ENDPOINT:-https://api.smith.langchain.com}
      - LANGSMITH_PROJECT=${LANGSMITH_PROJECT:-fyp-agent-api}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
      - REDIS_USERNMAE=${REDIS_USERNAME}
      -  REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - PORT=8000
    volumes:
      - ./.env:/app/.env:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - fyp-network
    
volumes:
  redis-data: 
    driver: local

networks:
  fyp-network:
    driver: bridge
